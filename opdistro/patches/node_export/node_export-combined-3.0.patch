diff --git a/node_export.module b/node_export.module
index 8bdadb9..1c0e33b 100755
--- a/node_export.module
+++ b/node_export.module
@@ -38,7 +38,8 @@ function node_export_menu() {
     'description' => 'Configure the settings for Node export.',
     'file' => 'node_export.pages.inc',
   );
-  $selected_formats = variable_get('node_export_format', array('drupal'));
+  // change from issue 1869918-33
+  $selected_formats = variable_get('node_export_format', array('drupal' => 'drupal'));
   if (count(array_filter($selected_formats)) > 1) {
     $format_handlers = node_export_format_handlers();
     foreach ($format_handlers as $format_handler => $format) {
@@ -218,7 +219,8 @@ function node_export_node_operations() {
   $operations = array();
   if (user_access('export nodes')) {
 
-    $selected_formats = variable_get('node_export_format', array('drupal'));
+    // change from issue 1869918-33
+    $selected_formats = variable_get('node_export_format', array('drupal' => 'drupal'));
     if (count(array_filter($selected_formats)) > 1) {
       $format_handlers = node_export_format_handlers();
       foreach ($format_handlers as $format_handler => $format) {
@@ -257,28 +259,31 @@ function node_export_bulk_operation($nodes = NULL, $format = NULL, $delivery = N
  */
 function node_export_action_info() {
   $actions = array();
-  if (user_access('export nodes')) {
-    $selected_formats = variable_get('node_export_format', array('drupal'));
-    $format_handlers = node_export_format_handlers();
-    foreach ($format_handlers as $format_handler => $format) {
-      if (!empty($selected_formats[$format_handler])) {
-         // @todo: should formats be able to define their own actions?
-         if (!empty($format['#file']) && is_file($format['#file'])) {
-           require_once $format['#file'];
-         }
-         $format_action = 'node_export_' . $format_handler . '_action';
-         if (function_exists($format_action . '_form')) {
-           $actions[$format_action] = array(
-             'type' => 'node',
-             'label' => t('Node export') . " (" . $format['#title'] . ")",
-             'behavior' => array('changes_property'),
-             // This action only works when invoked through VBO. That's why it's
-             // declared as non-configurable to prevent it from being shown in the
-             // "Create an advanced action" dropdown on admin/config/system/actions.
-             'configurable' => FALSE,
-             'vbo_configurable' => TRUE,
-           );
-        }
+  // remove user_access('export nodes') test
+  // this is causing bogus orphaned action errors
+  //  see https://www.drupal.org/node/2330607
+
+  // change from issue 1869918-33
+  $selected_formats = variable_get('node_export_format', array('drupal' => 'drupal'));
+  $format_handlers = node_export_format_handlers();
+  foreach ($format_handlers as $format_handler => $format) {
+    if (!empty($selected_formats[$format_handler])) {
+       // @todo: should formats be able to define their own actions?
+       if (!empty($format['#file']) && is_file($format['#file'])) {
+         require_once $format['#file'];
+       }
+       $format_action = 'node_export_' . $format_handler . '_action';
+       if (function_exists($format_action . '_form')) {
+         $actions[$format_action] = array(
+           'type' => 'node',
+           'label' => t('Node export') . " (" . $format['#title'] . ")",
+           'behavior' => array('changes_property'),
+           // This action only works when invoked through VBO. That's why it's
+           // declared as non-configurable to prevent it from being shown in the
+           // "Create an advanced action" dropdown on admin/config/system/actions.
+           'configurable' => FALSE,
+           'vbo_configurable' => TRUE,
+         );
       }
     }
   }
@@ -296,10 +301,14 @@ function node_export_action_info() {
 function node_export_action_form($context, &$form_state, $format = NULL) {
   // Get the name of the vbo views field
   $vbo = _views_bulk_operations_get_field($form_state['build_info']['args'][0]);
+
   // Adjust the selection in case the user chose 'select all'
-  _views_bulk_operations_adjust_selection($form_state['selection'], $form_state['select_all_pages'], $vbo);
+  // change from issue 1869918-33
+  if (!empty($form_state['select_all_pages'])) {
+    views_bulk_operations_direct_adjust($form_state['selection'], $vbo);
+  }
   $nodes = array_combine($form_state['selection'], $form_state['selection']);
-  return node_export_bulk_operation($nodes);
+  return node_export_bulk_operation($nodes, $format);
 }
 
 /**
@@ -347,7 +356,8 @@ function node_export($nids, $format = NULL, $msg_t = 't') {
 
   // Get the node code from the format handler
   $format_handlers = node_export_format_handlers();
-  $node_export_format = variable_get('node_export_format', array('drupal'));
+  // change from issue 1869918-33
+  $node_export_format = variable_get('node_export_format', array('drupal' => 'drupal'));
   $format_handler = $format ? $format : reset($node_export_format);
   if (!isset($format_handlers[$format_handler])) {
     $format_handler = 'drupal';
